//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "_MSTextLayer.h"

#import "MSFirstLineTypesetterDelegate.h"
#import "MSTextLayer.h"
#import "NSTextStorageDelegate.h"

@class MSColor, NSBezierPath, NSDictionary, NSFont, NSLayoutManager, NSObject<NSCopying><NSCoding>, NSString, NSTextContainer, NSTextStorage;

@interface MSTextLayer : _MSTextLayer <NSTextStorageDelegate, MSFirstLineTypesetterDelegate, MSTextLayer>
{
    int ignoreDelegateNotificationsCounter;
    BOOL _isEditingText;
    NSTextStorage *_storageBeforeResize;
    id <MSTextLayerEditingDelegate> _editingDelegate;
    struct CGSize _sizeBeforeResize;
    struct CGRect _previousRectCache;
}

+ (void)setTextAlignment:(unsigned long long)arg1 forLayers:(id)arg2;
@property(nonatomic) struct CGSize sizeBeforeResize; // @synthesize sizeBeforeResize=_sizeBeforeResize;
@property(nonatomic) __weak id <MSTextLayerEditingDelegate> editingDelegate; // @synthesize editingDelegate=_editingDelegate;
@property(nonatomic) BOOL isEditingText; // @synthesize isEditingText=_isEditingText;
@property(copy, nonatomic) NSTextStorage *storageBeforeResize; // @synthesize storageBeforeResize=_storageBeforeResize;
@property(nonatomic) struct CGRect previousRectCache; // @synthesize previousRectCache=_previousRectCache;
- (void).cxx_destruct;
- (BOOL)useProportionalResizingFromCorner:(long long)arg1;
- (BOOL)constrainProportions;
- (id)usedFonts;
- (BOOL)treatAsShiftedForCorner:(long long)arg1 onlyForFlexible:(BOOL)arg2;
- (void)calculateTextIsClippedAfterResizeFromCorner:(long long)arg1;
- (void)resizeFontToFitFromRect:(struct CGRect)arg1;
- (void)layerDidResizeFromRect:(struct CGRect)arg1 corner:(long long)arg2;
- (void)replaceTextPreservingAttributeRanges:(id)arg1;
- (void)makeLowercase:(id)arg1;
- (void)makeUppercase:(id)arg1;
- (void)multiplyBy:(double)arg1;
- (id)attributeForKey:(id)arg1;
- (void)addAttribute:(id)arg1 value:(id)arg2;
- (void)addAttributes:(id)arg1 forRange:(struct _NSRange)arg2;
- (void)setAttributes:(id)arg1 forRange:(struct _NSRange)arg2;
- (void)addAttribute:(id)arg1 value:(id)arg2 forRange:(struct _NSRange)arg3;
- (void)ignoreDelegateNotificationsInBlock:(CDUnknownBlockType)arg1;
@property(copy, nonatomic) NSString *stringValue;
- (void)setStringValueWithoutUndo:(id)arg1;
- (BOOL)isFrameEqualForSync:(id)arg1;
- (BOOL)textStorageIsEqual:(id)arg1;
- (void)syncTextStorageTo:(id)arg1;
- (void)copyTextStorageTo:(id)arg1;
- (void)prepareObjectCopy:(id)arg1;
- (void)layerStyleDidChange;
- (BOOL)isEmpty;
@property(copy, nonatomic) NSDictionary *styleAttributes;
@property(copy, nonatomic) MSColor *textColor;
@property(nonatomic) double lineHeight;
- (double)baseLineHeight;
@property(nonatomic) double characterSpacing;
@property(retain, nonatomic) NSString *fontPostscriptName;
- (void)setFont:(id)arg1;
@property(nonatomic) double fontSize;
@property(nonatomic) unsigned long long textAlignment;
- (void)setLeading:(double)arg1;
- (double)leading;
- (id)paragraphStyle;
- (void)setKerning:(float)arg1;
- (float)kerning;
- (void)markLayerDirtyOfType:(unsigned long long)arg1;
- (void)layerWillResize;
- (id)bezierPathFromGlyphsInBounds;
- (id)bezierPathFromGlyphsInFrame;
@property(readonly, nonatomic) NSBezierPath *bezierPath;
- (id)bezierPathWithTransforms;
- (double)startingPositionOnPath:(id)arg1;
@property(readonly, nonatomic) double defaultLineHeight;
@property(readonly, nonatomic) NSFont *font;
- (void)changeFont:(id)arg1;
- (BOOL)shouldDrawSelection;
- (unsigned long long)selectionCornerMaskWithZoomValue:(double)arg1;
@property(readonly, nonatomic) NSTextContainer *textContainer;
@property(readonly, nonatomic) NSLayoutManager *layoutManager;
- (id)shapeToUseForTextOnPath;
- (void)changeListType:(id)arg1;
- (void)prepareForUndo;
- (void)setStorageContents:(id)arg1;
- (void)setRectAccountingForClipped:(struct CGRect)arg1;
- (void)adjustFrameToFit;
- (void)parentWillResizeLayerToRect:(struct CGRect)arg1;
- (void)finishEditing;
- (void)textStorageDidProcessEditing:(id)arg1;
- (double)baselineAdjustmentForTypesetter:(id)arg1;
- (BOOL)compareAttributes:(id)arg1 withAttributes:(id)arg2;
- (void)syncTextStyleAttributes;
@property(readonly, nonatomic) double firstBaselineOffset;
- (struct CGSize)textContainerSize;
- (id)createTextContainer;
- (id)createLayoutManager;
- (void)setUpText;
- (void)rectDidChange:(id)arg1 fromRect:(struct CGRect)arg2;
- (void)setContainerSize:(struct CGSize)arg1;
- (void)adjustContainerWidthTo:(double)arg1;
- (void)setupBehaviour:(BOOL)arg1;
- (void)setTextBehaviour:(long long)arg1;
- (void)setLineSpacingBehaviour:(long long)arg1;
- (void)sanityCheckText;
- (void)setStyle:(id)arg1;
- (void)objectDidInit;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)performInitEmptyObject;
- (id)initWithFrame:(struct CGRect)arg1 attributes:(id)arg2 type:(long long)arg3;
- (id)initWithAttributedString:(id)arg1 maxWidth:(double)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)handlerName;
- (void)setLineSpacing:(double)arg1;
- (double)lineSpacing;
- (void)layerDidResizeFromInspector;
- (id)inspectorViewControllerNames;
- (void)drawHoverWithZoom:(double)arg1;
- (void)drawPreviewInRect:(struct CGRect)arg1 selected:(BOOL)arg2 cache:(id)arg3;
- (void)copyStylePropertiesToShape:(id)arg1;
- (id)rawCopyOfStyle:(id)arg1;
- (void)copyTextPropertiesToShape:(id)arg1;
- (BOOL)canConvertToOutlines;
- (id)layersByConvertingToOutlines;
- (Class)layerSnapperObjectClass;
- (void)changeTextColorTo:(id)arg1;
- (void)changeColor:(id)arg1;
- (BOOL)supportsInnerOuterBorders;
- (void)writeStyleToPasteboard:(id)arg1;
- (id)CSSAttributes;
- (void)setupWithLayerBuilderDictionary:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) struct CGAffineTransform CGTransformForFrame;
@property(readonly, nonatomic) BOOL automaticallyDrawOnUnderlyingPath;
@property(readonly, nonatomic) struct CGRect bounds;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) BOOL dontSynchroniseWithSymbol;
@property(readonly, nonatomic) id <MSExportOptions> exportOptionsGeneric;
@property(readonly, nonatomic) id <MSRect> frameGeneric;
@property(readonly, nonatomic) struct CGRect glyphBounds;
@property(readonly, nonatomic) BOOL hasTransforms;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) BOOL heightIsClipped;
@property(readonly, nonatomic) struct BCEdgePaddings influenceRectEdgePaddingsThatCascadeToContainedLayers;
@property(readonly, nonatomic) struct BCEdgePaddings influenceRectEdgePaddingsThatDoNotCascade;
@property(readonly, nonatomic) BOOL isFlippedHorizontal;
@property(readonly, nonatomic) BOOL isFlippedVertical;
@property(readonly, nonatomic) BOOL isLayerExportable;
@property(readonly, nonatomic) BOOL isLocked;
@property(readonly, nonatomic) BOOL isVisible;
@property(readonly, nonatomic) long long layerListExpandedType;
@property(readonly, nonatomic) long long lineSpacingBehaviour;
@property(readonly, copy, nonatomic) NSString *name;
@property(readonly, nonatomic) BOOL nameIsFixed;
@property(readonly, copy, nonatomic) NSObject<NSCopying><NSCoding> *objectID;
@property(readonly, nonatomic) struct CGPoint origin;
@property(readonly, nonatomic) NSObject<NSCopying><NSCoding> *originalObjectID;
@property(readonly, nonatomic) struct CGRect rect;
@property(readonly, nonatomic) double rotation;
@property(readonly, nonatomic) BOOL shouldBreakMaskChain;
@property(readonly, nonatomic) NSTextStorage *storage;
@property(readonly, nonatomic) id <MSStyle> styleGeneric;
@property(readonly) Class superclass;
@property(readonly, nonatomic) long long textBehaviour;
@property(readonly, copy, nonatomic) NSDictionary *userInfo;

@end


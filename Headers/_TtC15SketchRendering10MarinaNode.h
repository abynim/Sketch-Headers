//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jul  6 2018 12:02:43).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <swiftCore/_TtCs12_SwiftObject.h>

@interface _TtC15SketchRendering10MarinaNode : _TtCs12_SwiftObject
{
    // Error parsing type: , name: name
    // Error parsing type: , name: modelObject
    // Error parsing type: , name: bounds
    // Error parsing type: , name: position
    // Error parsing type: , name: anchorPoint
    // Error parsing type: , name: transform
    // Error parsing type: , name: contents
    // Error parsing type: , name: masks
    // Error parsing type: , name: shape
    // Error parsing type: , name: _path
    // Error parsing type: , name: fillRule
    // Error parsing type: , name: canAntialias
    // Error parsing type: , name: contentsPatternType
    // Error parsing type: , name: contentsAspectRatio
    // Error parsing type: , name: interpolationQuality
    // Error parsing type: , name: text
    // Error parsing type: , name: _strokedPath
    // Error parsing type: , name: lineWidth
    // Error parsing type: , name: lineCap
    // Error parsing type: , name: lineJoin
    // Error parsing type: , name: lineDashPhase
    // Error parsing type: , name: lineDashPattern
    // Error parsing type: , name: miterLimit
    // Error parsing type: , name: opacity
    // Error parsing type: , name: blendMode
    // Error parsing type: , name: subtreeCompositingMode
    // Error parsing type: , name: shadowRadius
    // Error parsing type: , name: shadowOffset
    // Error parsing type: , name: shadowColor
    // Error parsing type: , name: shadowReplacesContent
    // Error parsing type: , name: filter
    // Error parsing type: , name: shouldRasterize
    // Error parsing type: , name: rasterized
    // Error parsing type: , name: rasterCache
    // Error parsing type: , name: cacheLock
    // Error parsing type: , name: primitiveChildren
    // Error parsing type: , name: parent
}

- (id)debugQuickLookObject;
@property(nonatomic, readonly) BOOL canReuse;

@end


//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jul  6 2018 12:02:43).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MSEventHandler.h"

#import "MSFirstLineTypesetterDelegate-Protocol.h"
#import "MSTextLayerEditingDelegate-Protocol.h"
#import "MSTextLayerTextViewDelegate-Protocol.h"
#import "NSLayoutManagerDelegate-Protocol.h"
#import "NSTextStorageDelegate-Protocol.h"
#import "NSTextViewDelegate-Protocol.h"
#import "NSWindowDelegate-Protocol.h"

@class MSImmutableTextLayer, MSImmutableTextStyle, MSTextLayerTextView, MSTextWindow, NSAttributedString, NSString, NSTextStorage, NSTimer;

@interface MSTextInputEventHandler : MSEventHandler <NSTextViewDelegate, NSTextStorageDelegate, NSWindowDelegate, MSTextLayerEditingDelegate, MSTextLayerTextViewDelegate, MSFirstLineTypesetterDelegate, NSLayoutManagerDelegate>
{
    MSTextLayerTextView *_textView;
    MSImmutableTextLayer *_immutableTextLayer;
    NSTextStorage *_textStorage;
    NSTimer *_updateInsertionPointColorTimer;
    MSTextWindow *_textViewWindow;
}

- (void).cxx_destruct;
@property(retain, nonatomic) MSTextWindow *textViewWindow; // @synthesize textViewWindow=_textViewWindow;
@property(retain, nonatomic) NSTimer *updateInsertionPointColorTimer; // @synthesize updateInsertionPointColorTimer=_updateInsertionPointColorTimer;
@property(retain, nonatomic) NSTextStorage *textStorage; // @synthesize textStorage=_textStorage;
@property(readonly, nonatomic) MSImmutableTextLayer *immutableTextLayer; // @synthesize immutableTextLayer=_immutableTextLayer;
@property(retain, nonatomic) MSTextLayerTextView *textView; // @synthesize textView=_textView;
- (void)willStartExporting;
- (id)selectionTouchBar;
- (BOOL)shouldExitOnContentViewResize;
- (BOOL)validateMenuItem:(id)arg1;
- (void)magnifyWithEvent:(id)arg1;
- (BOOL)canDuplicate;
- (void)dealloc;
- (void)doTextModification:(CDUnknownBlockType)arg1;
- (id)applyTextColor:(id)arg1;
- (void)colorMagnifierAction:(id)arg1;
- (void)removeTextTransform:(id)arg1;
- (void)makeLowercase:(id)arg1;
- (void)makeUppercase:(id)arg1;
- (void)applyTextTransform:(id)arg1;
- (void)removeTextView;
- (void)handlerWillLoseFocus;
- (BOOL)handlesHistoryCoalescing;
- (BOOL)textView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (void)selectAll:(id)arg1;
- (struct CGRect)windowFrameForDrawView;
- (void)scrollWheel:(id)arg1;
- (void)zoomValueWillChangeTo:(double)arg1;
- (void)viewDidScroll:(id)arg1;
- (BOOL)absoluteMouseDown:(struct CGPoint)arg1 clickCount:(unsigned long long)arg2 flags:(unsigned long long)arg3;
- (void)adjustTextViewFrame;
- (void)scheduleUpdateInsertionPointColorTimer;
- (BOOL)layoutManager:(id)arg1 shouldSetLineFragmentRect:(inout struct CGRect *)arg2 lineFragmentUsedRect:(inout struct CGRect *)arg3 baselineOffset:(inout double *)arg4 inTextContainer:(id)arg5 forGlyphRange:(struct _NSRange)arg6;
- (void)layoutManager:(id)arg1 didCompleteLayoutForTextContainer:(id)arg2 atEnd:(BOOL)arg3;
- (BOOL)shouldUseCustomBaselineForTextLayerTextView:(id)arg1;
- (id)documentColorSpaceForTextLayerTextView:(id)arg1;
- (id)canvasColorSpaceForTextLayerTextView:(id)arg1;
- (void)textViewDidChangeSelection:(id)arg1;
- (id)undoManager;
- (void)dispatchTryPutFirstFocusBack;
- (void)tryPutFirstFocusBack;
- (void)windowDidResignKey:(id)arg1;
- (double)baselineAdjustmentForLayoutManager:(id)arg1;
- (void)adjustForegroundColor;
- (id)insertionPointColor;
- (struct CGImage *)newTextLayerImageFromWindowBackingStore;
- (void)beginEditing;
- (void)makeTextWindow;
- (void)makeTextView;
- (void)addTextView;
- (id)toolbarIdentifier;
@property(readonly, nonatomic) MSImmutableTextStyle *defaultTextStyle;
@property(readonly, nonatomic) NSString *stringValue;
@property(readonly, nonatomic) NSAttributedString *attributedStringValue;
@property(readonly, nonatomic) struct CGRect absoluteFrameForRect;
- (void)reloadFollowingBackgroundChangesToDocument;
- (void)handlerGotFocus;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

